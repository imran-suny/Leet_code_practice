Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1]
Example 2:
Input: nums = [3,3], target = 6
Output: [0,1]

######## Hash map (also known as a dictionary)
def twoSum(self, nums: List[int] , target: int):

                                                           # Create a dictionary to store the mapping of numbers to their indices
    hash_Map = {}                                           # value: index   {0:1, 1:7......... }
    for i, n in enumerate (nums):                           #  (0, 2)(1, 7)(3, 11)(4, 15)
        diff = target - n                                   # diff = 9-2 =7
        if diff in hash_Map:                                #  If the diff exists in the dictionary, return the indices :  7 don't exist initially    ///// for exmaple2, diff = 6-3 = 3 , still no
          return [hash_Map[diff], i]                        # return pair of index (0,1 )
        hash_Map[n] = i                                     # Otherwise, add the current number to the dictionary  no 7 in the list initially, so hash_Map= {0:0, }


enumerate:::  gives the index of an element while iterating over a list ///// a list of tuples using the list() function...........
fruits = [(15,"Fifteen"), (12,"Twelve"), (19,"Nineteen")]
 for i,j in enumerate(fruits):
     print(i,j)
0 (15, 'Fifteen')
1 (12, 'Twelve')
2 (19, 'Nineteen')
