class Solution:
    def subsets(self, nums: List[int]) -> List[List[int]]:
        res = []
        subset = []
        def dfs(i):
            if i == len(nums):
                res.append(subset.copy())
                return
            # decision to include nums[i]
            subset.append(nums[i])
            dfs(i + 1)
            # decision NOT to include nums[i]
            subset.pop()
            dfs(i + 1)
        dfs(0)
        return res
In Python, recursive function calls return to the point where they were called once they complete their execution.     

# | Call        | Action                       | `subset`     | `res`                       |
# |-------------|------------------------------|--------------|-----------------------------|
# | `dfs(0)`    | Start                        | `[]`         | `[]`                        |
# | `dfs(0)`    | Include `1`                  | `[1]`        | `[]`                        |
# | `dfs(1)`    | Include `2`                  | `[1, 2]`     | `[]`                        |
# | `dfs(2)`    | Include `3`                  | `[1, 2, 3]`  | `[]`                        |
# | `dfs(3)`    | Base Case, Add `[1, 2, 3]`   | `[1, 2, 3]`  | `[[1, 2, 3]]`               |
# | `dfs(3)`    | Return to `dfs(2)`           | `[1, 2, 3]`  | `[[1, 2, 3]]`               |
# | `dfs(2)`    | Exclude `3`                  | `[1, 2]`     | `[[1, 2, 3]]`               |
# | `dfs(3)`    | Base Case, Add `[1, 2]`      | `[1, 2]`     | `[[1, 2, 3], [1, 2]]`       |
# | `dfs(3)`    | Return to `dfs(2)`           | `[1, 2]`     | `[[1, 2, 3], [1, 2]]`       |
# | `dfs(2)`    | Return to `dfs(1)`           | `[1, 2]`     | `[[1, 2, 3], [1, 2]]`       |
# | `dfs(1)`    | Exclude `2`                  | `[1]`        | `[[1, 2, 3], [1, 2]]`       |
# | `dfs(2)`    | Include `3`                  | `[1, 3]`     | `[[1, 2, 3], [1, 2]]`       |
# | `dfs(3)`    | Base Case, Add `[1, 3]`      | `[1, 3]`     | `[[1, 2, 3], [1, 2], [1, 3]]` |
# | `dfs(3)`    | Return to `dfs(2)`           | `[1, 3]`     | `[[1, 2, 3], [1, 2], [1, 3]]` |
# | `dfs(2)`    | Exclude `3`                  | `[1]`        | `[[1, 2, 3], [1, 2], [1, 3]]` |
# | `dfs(3)`    | Base Case, Add `[1]`         | `[1]`        | `[[1, 2, 3], [1, 2], [1, 3], [1]]` |
# | `dfs(3)`    | Return to `dfs(2)`           | `[1]`        | `[[1, 2, 3], [1, 2], [1, 3], [1]]` |
# | `dfs(2)`    | Return to `dfs(1)`           | `[1]`        | `[[1, 2, 3], [1, 2], [1, 3], [1]]` |
# | `dfs(1)`    | Return to `dfs(0)`           | `[1]`        | `[[1, 2, 3], [1, 2], [1, 3], [1]]` |
# | `dfs(0)`    | Exclude `1`                  | `[]`         | `[[1, 2, 3], [1, 2], [1, 3], [1]]` |
# | `dfs(1)`    | Include `2`                  | `[2]`        | `[[1, 2, 3], [1, 2], [1, 3], [1]]` |
# | `dfs(2)`    | Include `3`                  | `[2, 3]`     | `[[1, 2, 3], [1, 2], [1, 3], [1]]` |
# | `dfs(3)`    | Base Case, Add `[2, 3]`      | `[2, 3]`     | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3]]` |
# | `dfs(3)`    | Return to `dfs(2)`           | `[2, 3]`     | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3]]` |
# | `dfs(2)`    | Exclude `3`                  | `[2]`        | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3]]` |
# | `dfs(3)`    | Base Case, Add `[2]`         | `[2]`        | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2]]` |
# | `dfs(3)`    | Return to `dfs(2)`           | `[2]`        | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2]]` |
# | `dfs(2)`    | Return to `dfs(1)`           | `[2]`        | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2]]` |
# | `dfs(1)`    | Exclude `2`                  | `[]`         | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2]]` |
# | `dfs(2)`    | Include `3`                  | `[3]`        | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2]]` |
# | `dfs(3)`    | Base Case, Add `[3]`         | `[3]`        | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3]]` |
# | `dfs(3)`    | Return to `dfs(2)`           | `[3]`        | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3]]` |
# | `dfs(2)`    | Exclude `3`                  | `[]`         | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3]]` |
# | `dfs(3)`    | Base Case, Add `[]`          | `[]`         | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3], []]` |
# | `dfs(3)`    | Return to `dfs(2)`           | `[]`         | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3], []]` |
# | `dfs(2)`    | Return to `dfs(1)`           | `[]`         | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3], []]` |
# | `dfs(1)`    | Return to `dfs(0)`           | `[]`         | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3], []]` |
# | `dfs(0)`    | End                          | `[]`         | `[[1, 2, 3], [1, 2], [1, 3], [1], [2, 3], [2], [3], []]` |
